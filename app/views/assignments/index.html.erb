<% if flash[:color] == "red" %>
  <div class="red-text"><%= flash[:notice] %></div>
<% elsif flash[:color] == "green" %>
  <div class="green-text"><%= flash[:notice] %></div>
<% else %>
  <div><%= flash[:notice] %></div>
<% end %>

<div class="row">
  <div class="col-lg-8 col-md-12">
    <h2>
      シフト (<%= @month.strftime("%Y-%m") %>)
      <%= link_to "＜", assignments_path(month: (@month << 1).strftime("%Y%m")) %>
      <%= link_to "＞", assignments_path(month: (@month >> 1).strftime("%Y%m")) %>
    </h2>
  </div>
  <div class="col-lg-4 col-md-12">
    <%= link_to "#{@month.strftime("%Y")}年#{@month.strftime("%m")}月の勤務表作成", create_assignment_path(month: (@month).strftime("%Y%m")), class: "btn btn-outline-primary" %>
    <%= link_to "AUK ファイルをダウンロード", auk_download_path(month: (@month).strftime("%Y%m")), class: 'btn btn-primary' %>
  </div>
</div>

<div class="col-lg-4 col-md-12">
  <!-- 表示切り替えボタン -->
  <div>
    <button id="month-view-btn">月表示</button>
    <button id="week-view-btn">週表示</button>
  </div>
<div id="week-selector" style="display: none;">
  <select id="week-dropdown">
    <% start_date = @month.beginning_of_month %>
    <% start_date -= start_date.wday - 1 if start_date.wday != 1 %>
    <% if @month.beginning_of_month.wday != 1 %>
      <% start_date = @month.beginning_of_month.beginning_of_week(:monday) %>
    <% end %>
    <% end_date = @month.end_of_month %>
    <% week_ranges = [] %>
    <% current_start_date = start_date %>
    <% while current_start_date <= end_date %>
      <% current_end_date = current_start_date + 6.days %>
      <% week_ranges << (current_start_date..current_end_date) %>
      <% current_start_date = current_end_date + 1.day %>
    <% end %>

    <% week_ranges.each_with_index do |week_dates, index| %>
      <option value="<%= index %>">
        <%= week_dates.first.strftime("%Y年%-m月%-d日") %> - <%= week_dates.last.strftime("%Y年%-m月%-d日") %>
      </option>
    <% end %>
  </select>
</div>

</div>


<div id="calendar-container" data-turbo-frame="assignments">
  <% assignment_table = {} %>
  <% week = ["日","月","火","水","木","金","土"] %>
  <% shifts = {@shift_names.first => "bg-day", @shift_names.second => "bg-sem", @shift_names.third => "bg-ngt"} %>
  <% shift_classes = {"日" => @shift_names.first.first, @shift_names.second.first => "sem", @shift_names.third.first => "ngt"} %>
  <% @assignments.each do |assignment| %>
    <% date = assignment.date %>
    <% nurse = assignment.rails_nurse %>
    <% if assignment.shift_type.nil? %>
      <% unless assignment_table[nurse.id] %>
        <% assignment_table[nurse.id] = {} %>
      <% end %>
        <% assignment_table[nurse.id][date] = {} %>
    <% else %>
      <% unless assignment_table[nurse.id] %>
        <% assignment_table[nurse.id] = {} %>
      <% end %>
      <% assignment_table[nurse.id][date] = assignment.shift_type.name.first %>
    <% end %>
  <% end %>

  <!-- 月カレンダ -->
  <div id="month-view" style="display: none;">
    <table oncontextmenu="return false;">
      <caption>
        <%= @month.strftime("%Y") %>年度<%= @month.strftime("%m") %>月勤務表
      </caption>
      <tr>
        <th class="right"></th>
        <% (@month...(@month >> 1)).each do |date| %>
          <% if HolidayJp.holiday?(date) || date.wday == 6 || date.wday == 0 %>
            <th class="center-align bg-holidays"><%= date.strftime("%d") %></th>
          <% else %>
            <th class="center-align"><%= date.strftime("%d") %></th>
          <% end %>
        <% end %>
        <th class="center-align bg-sem"><%= @shift_names.second.first %></th>
        <th class="center-align bg-ngt"><%= @shift_names.third.first %></th>
        <th class="center-align bg-semngt"><%= "夜" %></th>
        <th class="center-align bg-day"><%= @shift_names.first.first %></th>
        <th class="center-align bg-off"><%= @shift_names.fourth.first %></th>
        <th class="center-align"><%= "未" %></th>
      </tr>
      <tr>
        <td class="right bottom"></td>
        <% (@month...(@month >> 1)).each do |date| %>
          <% if HolidayJp.holiday?(date) || date.wday == 6 || date.wday == 0 %>
            <td class="center-align bg-holidays bottom"><%= week[date.wday] %></td>
          <% else %>
            <td class="center-align bottom"><%= week[date.wday] %></td>
          <% end %>
        <% end %>
        <td class="center-align bg-sem bottom"></td>
        <td class="center-align bg-ngt bottom"></td>
        <td class="center-align bg-semngt bottom"></td>
        <td class="center-align bg-day bottom"></td>
        <td class="center-align bg-off bottom"></td>
        <td class="center-align bottom"></td>
      </tr>

      <% @nurses.each do |nurse| %>
        <% nurse_assignments = nurse.assignments || [] %>
        <% next if nurse_assignments.blank? %>
        <% if nurse_assignments.any?{|a| @date_range.cover?(a.date)} %>
          <tr>
            <td class="left-align right nurse-<%= nurse.id %>" width="10%"><%= link_to_if nurse.name, nurse.name, rails_nurse_path(nurse.id, month: (@month).strftime("%Y%m")) %></td>
            <% (@month...(@month >> 1)).each do |date| %>
              <% assignment = nurse_assignments.find { |a| a.date == date } %>
              <% shift_name = assignment&.shift_type&.name&.first %>
              <% shift_class = shift_classes[shift_name] %>
              <% if HolidayJp.holiday?(date) || date.wday == 6 || date.wday == 0 %>
                <td class="center-align <%= shift_class %> bg-holidays nurse-<%= nurse.id %> date-<%= date %> month" id="shift_type" data-controller="update_shifts" data-action="contextmenu->update_shifts#changeShiftType"><%= shift_name %></td>
              <% else %>
                <td class="center-align <%= shift_class %> nurse-<%= nurse.id %> date-<%= date %> month" id="shift_type" data-controller="update_shifts" data-action="contextmenu->update_shifts#changeShiftType"><%= shift_name %></td>
              <% end %>
            <% end %>
            <td class="right-align bg-sem nurse-<%= nurse.id %> month" id="sem_sum"><%= @nurse_shift_counts[nurse.id][@shift_names.second] %></td>
            <td class="right-align bg-ngt nurse-<%= nurse.id %> month" id="ngt_sum"><%= @nurse_shift_counts[nurse.id][@shift_names.third] %></td>
            <td class="right-align bg-semngt nurse-<%= nurse.id %> month" id="semngt_sum" ><%= @nurse_shift_counts[nurse.id][@shift_names.second] + @nurse_shift_counts[nurse.id][@shift_names.third] %></td>
            <td class="right-align bg-day nurse-<%= nurse.id %> month" id="day_sum"><%= @nurse_shift_counts[nurse.id][@shift_names.first] %></td>
            <td class="right-align bg-off nurse-<%= nurse.id %> month" id="off_sum"><%= @nurse_shift_counts[nurse.id][@shift_names.fourth] %></td>
            <td class="right-align nurse-<%= nurse.id %> month" id="shift_sum"><%= ((@month >> 1) - @month).to_i - @nurse_shift_counts[nurse.id].values.sum %></td>
          </tr>
        <% end %>
      <% end %>
      <% shifts.each do |shift| %>
        <tr>
          <td class="left-align <%= shifts[shift.first] %> right top">総<%= shift.first %>合計</td>
          <% (@month...(@month >> 1)).each do |date| %>
            <td class="right-align <%= shifts[shift.first] %> date-<%= date %> top month" id="<%= shifts[shift.first] %>_sum"><%= @daily_shift_counts[date][shift.first] %></td>
          <% end %>
        </tr>
      <% end %>
    </table>
  </div>

  <!-- 週カレンダ -->
  <div id="week-view" style="display: block;">
    <% start_date = @month.beginning_of_month %>
    <% start_date -= start_date.wday - 1 if start_date.wday != 1 %>
    <% if @month.beginning_of_month.wday != 1 %>
      <% start_date = @month.beginning_of_month.beginning_of_week(:monday) %>
    <% end %>
    <% end_date = @month.end_of_month %>
    <% week_ranges = [] %>
    <% current_start_date = start_date %>
    <% while current_start_date <= end_date %>
      <% current_end_date = current_start_date + 6.days %>
      <% week_ranges << (current_start_date..current_end_date) %>
      <% current_start_date = current_end_date + 1.day %>
    <% end %>
    <% week_ranges.each_with_index do |week_dates, index| %>
      <div class="week-table-wrapper" id="week-<%= index %>" style="<%= index == 0 ? 'display: block;' : 'display: none;' %>">
        <table oncontextmenu="return false;">
          <caption>
            <%= week_dates.first.strftime("%Y年%-m月%-d日") %> - <%= week_dates.last.strftime("%Y年%-m月%-d日") %> 勤務表
          </caption>
          <tr>
            <th class="right"></th>
            <% week_dates.each do |date| %>
              <% if HolidayJp.holiday?(date) || date.wday == 6 || date.wday == 0 %>
                <th class="center-align bg-holidays"><%= date.strftime("%d") %></th>
              <% else %>
                <th class="center-align"><%= date.strftime("%d") %></th>
              <% end %>
            <% end %>
            <th class="center-align bg-sem"><%= @shift_names.second.first %></th>
            <th class="center-align bg-ngt"><%= @shift_names.third.first %></th>
            <th class="center-align bg-semngt"><%= "夜" %></th>
            <th class="center-align bg-day"><%= @shift_names.first.first %></th>
            <th class="center-align bg-off"><%= @shift_names.fourth.first %></th>
            <th class="center-align"><%= "未" %></th>
          </tr>
          <tr>
            <td class="right bottom"></td>
            <% week_dates.each do |date| %>
              <% if HolidayJp.holiday?(date) || date.wday == 6 || date.wday == 0 %>
                <td class="center-align bg-holidays bottom"><%= week[date.wday] %></td>
              <% else %>
                <td class="center-align bottom"><%= week[date.wday] %></td>
              <% end %>
            <% end %>
            <td class="center-align bg-sem bottom"></td>
            <td class="center-align bg-ngt bottom"></td>
            <td class="center-align bg-semngt bottom"></td>
            <td class="center-align bg-day bottom"></td>
            <td class="center-align bg-off bottom"></td>
            <td class="center-align bottom"></td>
          </tr>

          <% @nurses.each do |nurse| %>
            <% nurse_assignments = nurse.assignments || [] %>
            <% next if nurse_assignments.blank? %>
            <% week_range = week_dates.first..week_dates.last %>
            <% if nurse_assignments.any? { |a| week_range.cover?(a.date) } %>
              <tr>
                <td class="left-align right nurse-<%= nurse.id %>" width="10%"><%= link_to_if nurse.name, nurse.name, rails_nurse_path(nurse.id, month: (@month).strftime("%Y%m")) %></td>
                <% week_dates.each do |date| %>
                  <% assignment = nurse_assignments.find { |a| a.date == date } %>
                  <% shift_name = assignment&.shift_type&.name&.first %>
                  <% shift_class = shift_classes[shift_name] %>
                  <% if HolidayJp.holiday?(date) || date.wday == 6 || date.wday == 0 %>
                    <td class="center-align <%= shift_class %> bg-holidays nurse-<%= nurse.id %> date-<%= date %> week-<%= index %>" id="shift_type" data-controller="update_shifts" data-action="contextmenu->update_shifts#changeShiftType"><%= shift_name %></td>
                  <% else %>
                    <td class="center-align <%= shift_class %> nurse-<%= nurse.id %> date-<%= date %> week-<%= index %>" id="shift_type" data-controller="update_shifts" data-action="contextmenu->update_shifts#changeShiftType"><%= shift_name %></td>
                  <% end %>
                <% end %>
                <td class="right-align bg-sem nurse-<%= nurse.id %> week-<%= index %>" id="sem_sum">
                  <%= (@weekly_shift_counts[index]&.dig(:nurse_shift_counts, nurse.id, @shift_names.second) || 0) %>
                </td>
                <td class="right-align bg-ngt nurse-<%= nurse.id %> week-<%= index %>" id="ngt_sum">
                  <%= (@weekly_shift_counts[index]&.dig(:nurse_shift_counts, nurse.id, @shift_names.third) || 0) %>
                </td>
                <td class="right-align bg-semngt nurse-<%= nurse.id %> week-<%= index %>" id="semngt_sum">
                  <%= (@weekly_shift_counts[index]&.dig(:nurse_shift_counts, nurse.id, @shift_names.second) || 0) +
                      (@weekly_shift_counts[index]&.dig(:nurse_shift_counts, nurse.id, @shift_names.third) || 0) %>
                </td>
                <td class="right-align bg-day nurse-<%= nurse.id %> week-<%= index %>" id="day_sum">
                  <%= (@weekly_shift_counts[index]&.dig(:nurse_shift_counts, nurse.id, @shift_names.first) || 0) %>
                </td>
                <td class="right-align bg-off nurse-<%= nurse.id %> week-<%= index %>" id="off_sum">
                  <%= (@weekly_shift_counts[index]&.dig(:nurse_shift_counts, nurse.id, @shift_names.fourth) || 0) %>
                </td>
                <td class="right-align nurse-<%= nurse.id %> week-<%= index %>" id="shift_sum">
                  <%= (week_dates.to_a.size - (@weekly_shift_counts[index]&.dig(:nurse_shift_counts, nurse.id)&.values&.flatten&.sum || 0)) %>
                </td>
              </tr>
            <% end %>
          <% end %>
          <% shifts.each do |shift| %>
            <tr>
              <td class="left-align <%= shifts[shift.first] %> right top">総<%= shift.first %>合計</td>
              <% week_dates.each do |date| %>
                <td class="right-align <%= shifts[shift.first] %> date-<%= date %> top week-<%= index %>" id="<%= shifts[shift.first] %>_sum"><%= @daily_shift_counts[date].to_h[shift.first] || 0 %></td>
              <% end %>
            </tr>
          <% end %>
        </table>
      </div>
    <% end %>
  </div>
</div>

<script>
document.addEventListener("DOMContentLoaded", function() {
  const monthViewBtn = document.getElementById("month-view-btn");
  const weekViewBtn = document.getElementById("week-view-btn");
  const weekSelector = document.getElementById("week-selector");
  const weekDropdown = document.getElementById("week-dropdown");
  const weekView = document.getElementById("week-view");
  const monthView = document.getElementById("month-view");

  // デフォルトで週表示に設定
  weekSelector.style.display = "block";
  monthView.style.display = "none";
  weekView.style.display = "block";
  displayWeekCalendar(); // 初期表示の週カレンダーを表示

  // 月表示ボタンのクリックイベント
  monthViewBtn.addEventListener("click", function() {
    weekSelector.style.display = "none";
    weekView.style.display = "none";
    monthView.style.display = "block";
    setTimeout(() => {
      // 月表示に切り替えた後にフォーカスを設定
      let firstShiftTypeCell = document.querySelector("#month-view td#shift_type");
      if (firstShiftTypeCell) {
        if (selectedCell) {
          selectedCell.classList.remove("selected"); // 既存の選択を解除
        }
        selectedCell = firstShiftTypeCell;
        selectedCell.classList.add("selected");
      }
    }, 0); // setTimeout で遅延させて月表示が完全に表示されてからフォーカス設定
  });

  // 週表示ボタンのクリックイベント
  weekViewBtn.addEventListener("click", function() {
    weekSelector.style.display = "block";
    monthView.style.display = "none";
    weekView.style.display = "block";
    displayWeekCalendar(); // 週カレンダーの再表示
    setTimeout(() => {
      let firstShiftTypeCell = document.querySelector("#week-view td#shift_type");
      if (firstShiftTypeCell) {
        if (selectedCell) {
          selectedCell.classList.remove("selected"); // 既存の選択を解除
        }
        selectedCell = firstShiftTypeCell;
        selectedCell.classList.add("selected");
      }
    }, 0); // setTimeout で遅延させて週表示が完全に表示されてからフォーカス設定
  });

  // 週カレンダーの表示を更新する関数
  function displayWeekCalendar() {
    const selectedWeek = weekDropdown.value;
    const weekTables = document.querySelectorAll("#week-view .week-table-wrapper");

    weekTables.forEach((table, index) => {
      table.style.display = index.toString() === selectedWeek ? "block" : "none";
    });

    // 週表示時に `td#shift_type` の最初のセルにフォーカスを設定
    setTimeout(() => {
      let firstShiftTypeCell = document.querySelector("#week-view td#shift_type");
      if (firstShiftTypeCell) {
        if (selectedCell) {
          selectedCell.classList.remove("selected"); // 既存の選択を解除
        }
        selectedCell = firstShiftTypeCell;
        selectedCell.classList.add("selected");
      }
    }, 0);
  }

  // ドロップダウンの選択変更時に週カレンダーを更新
  weekDropdown.addEventListener("change", displayWeekCalendar);

  // 初期選択セルを設定
  let selectedCell = document.querySelector("td#shift_type");
  if (selectedCell) {
    selectedCell.classList.add("selected");
  }

  // キー入力イベント（選択されたセルを移動）
  document.addEventListener("keydown", function(event) {
    event.stopPropagation(); // イベント伝播を停止
    if (!selectedCell) return;
    let nextCell = null;

    if (event.key === "ArrowRight") {
      nextCell = selectedCell.nextElementSibling; // 右のセルへ移動
    } else if (event.key === "ArrowLeft") {
      nextCell = selectedCell.previousElementSibling; // 左のセルへ移動
    } else if (event.key === "ArrowDown") {
      const row = selectedCell.parentElement;
      const rowIndex = Array.from(row.children).indexOf(selectedCell);
      const nextRow = row.nextElementSibling;
      if (nextRow) nextCell = nextRow.children[rowIndex]; // 下のセルへ移動
    } else if (event.key === "ArrowUp") {
      const row = selectedCell.parentElement;
      const rowIndex = Array.from(row.children).indexOf(selectedCell);
      const prevRow = row.previousElementSibling;
      if (prevRow) nextCell = prevRow.children[rowIndex]; // 上のセルへ移動
    }

    if (nextCell && nextCell.id === "shift_type") {
      if (selectedCell) {
        selectedCell.classList.remove("selected"); // 前回の選択を解除
      }
      selectedCell = nextCell;
      selectedCell.classList.add("selected"); // 新しいセルに選択を追加
    }

    // d, j, s, o のキー入力で勤務変更
    const shiftMappings = {
      "d": "日",
      "j": "準",
      "s": "深",
      "o": "休"
    };

    if (shiftMappings[event.key]) {
      selectedCell.textContent = shiftMappings[event.key];
      updateShiftType(selectedCell, shiftMappings[event.key]); // 勤務変更を反映
    }
  });

  const shift_type_el = document.querySelectorAll("#shift_type");
  const shift_type_lists = ["日", "準", "深", "休"];

  shift_type_el.forEach(function(el) {
    // **右クリックでの勤務変更 (トグル)**
    el.addEventListener("contextmenu", function(event) {
      event.preventDefault();

      const currentShiftType = el.textContent.trim();
      let next_shift_type = "";

      // 次のシフトタイプを決定
      shift_type_lists.forEach((type, index) => {
        if (currentShiftType === type) {
          next_shift_type = shift_type_lists[(index + 1) % shift_type_lists.length];
        }
      });

      // 勤務を更新
      updateShiftType(el, next_shift_type);
    });

    // **左クリックでプルダウン表示**
    el.addEventListener("click", function(event) {
      event.preventDefault();

      // すでにプルダウンが表示されていたら削除
      let existingDropdown = document.getElementById("shift-dropdown");
      if (existingDropdown) {
        // 既存のプルダウンを削除する前に親ノードにまだ存在しているか確認
        if (existingDropdown.parentNode) {
          existingDropdown.remove();
        }
      }

      // プルダウンを作成
      let dropdown = document.createElement("select");
      dropdown.id = "shift-dropdown";
      dropdown.style.position = "absolute";
      dropdown.style.left = `${event.pageX}px`;
      dropdown.style.top = `${event.pageY}px`;

      // 選択肢を追加
      shift_type_lists.forEach(type => {
        let option = document.createElement("option");
        option.value = type;
        option.textContent = type;
        dropdown.appendChild(option);
      });

      // 現在の勤務を選択状態に
      dropdown.value = el.textContent.trim();

      // プルダウンが変更されたときの処理
      dropdown.addEventListener("change", function() {
        updateShiftType(el, dropdown.value);
        dropdown.remove(); // 選択後にプルダウンを削除
      });

      // フォーカスが外れたら削除
        dropdown.addEventListener("blur", function() {
        // setTimeout を使用して、blur が終了した後に削除処理を実行
        setTimeout(function() {
          if (dropdown.parentNode) {
            dropdown.remove();
          }
        }, 0);
      });

      document.body.appendChild(dropdown);
      dropdown.focus(); // フォーカスを当てて即選択可能に
    });
  });

  // **勤務を更新し、合計を再計算**
  function updateShiftType(el, newShift) {
    el.textContent = newShift;
    // クリックされたセルの nurseId, weekId, date を取得
    const classList = el.classList;
    const nurseIdClass = Array.from(classList).find(cls => cls.startsWith('nurse-'));
    const dateClass = Array.from(classList).find(cls => cls.startsWith('date-'));
    const weekClass = Array.from(classList).find(cls => cls.startsWith('week-'));
    const nurseId = nurseIdClass ? nurseIdClass.split('-')[1] : null;
    const weekId = weekClass ? weekClass.split('-')[1] : null;
    const parts = dateClass.split('-');
    const result = `${parts[1]}-${parts[2]}-${parts[3]}`;
    const date = dateClass ? result : null;

    updateSumElements(nurseId, weekId, date);
  }

  // **合計値を更新する処理**
  function updateSumElements(nurseId, weekId, date) {
    let weekdayCount = 0, weeksemCount = 0, weekngtCount = 0, weekoffCount = 0;
    let monthdayCount = 0, monthsemCount = 0, monthngtCount = 0, monthoffCount = 0;
    let weekdatedayCount = 0, weekdatesemCount = 0, weekdatengtCount = 0, weekdateoffCount = 0;
    let monthdatedayCount = 0, monthdatesemCount = 0, monthdatengtCount = 0, monthdateoffCount = 0;

    // 週表示テーブルのナースごとのセルを取得してカウント
    const weeknurseElements = document.querySelectorAll(`td.nurse-${nurseId}.week-${weekId}`);
    weeknurseElements.forEach(function(element) {
      let text = element.textContent.trim();
      switch(text) {
        case "日": weekdayCount++; break;
        case "準": weeksemCount++; break;
        case "深": weekngtCount++; break;
        case "休": weekoffCount++; break;
      }
    });

    // 月表示テーブルのナースごとのセルを取得してカウント
    const monthnurseElements = document.querySelectorAll(`td.nurse-${nurseId}.month`);
    monthnurseElements.forEach(function(element) {
      let text = element.textContent.trim();
      switch(text) {
        case "日": monthdayCount++; break;
        case "準": monthsemCount++; break;
        case "深": monthngtCount++; break;
        case "休": monthoffCount++; break;
      }
    });

    // 週表示テーブルのナースごとのセルを取得してカウント
    const weekdateElements = document.querySelectorAll(`td.date-${date}.week-${weekId}`);
    weekdateElements.forEach(function(element) {
      let text = element.textContent.trim();
      switch(text) {
        case "日": weekdatedayCount++; break;
        case "準": weekdatesemCount++; break;
        case "深": weekdatengtCount++; break;
        case "休": weekdateoffCount++; break;
      }
    });

    // 月表示テーブルのナースごとのセルを取得してカウント
    const monthdateElements = document.querySelectorAll(`td.date-${date}.month`);
    monthdateElements.forEach(function(element) {
      let text = element.textContent.trim();
      switch(text) {
        case "日": monthdatedayCount++; break;
        case "準": monthdatesemCount++; break;
        case "深": monthdatengtCount++; break;
        case "休": monthdateoffCount++; break;
      }
    });

    // 週の合計を更新
    updateSumElement(`week-${weekId}#day_sum`, weekdayCount, nurseId);
    updateSumElement(`week-${weekId}#sem_sum`, weeksemCount, nurseId);
    updateSumElement(`week-${weekId}#ngt_sum`, weekngtCount, nurseId);
    updateSumElement(`week-${weekId}#off_sum`, weekoffCount, nurseId);
    updateSumElement(`week-${weekId}#semngt_sum`, weeksemCount + weekngtCount, nurseId);
    updateSumElement2(`week-${weekId}#bg-day_sum`, weekdatedayCount, date);
    updateSumElement2(`week-${weekId}#bg-sem_sum`, weekdatesemCount, date);
    updateSumElement2(`week-${weekId}#bg-ngt_sum`, weekdatengtCount, date);

    // 月の合計を更新
    updateSumElement('month#day_sum', monthdayCount, nurseId);
    updateSumElement('month#sem_sum', monthsemCount, nurseId);
    updateSumElement('month#ngt_sum', monthngtCount, nurseId);
    updateSumElement('month#off_sum', monthoffCount, nurseId);
    updateSumElement('month#semngt_sum', monthsemCount + monthngtCount, nurseId);
    updateSumElement2('month#bg-day_sum', monthdatedayCount, date);
    updateSumElement2('month#bg-sem_sum', monthdatesemCount, date);
    updateSumElement2('month#bg-ngt_sum', monthdatengtCount, date);
  }

  function updateSumElement(className, value, nurseId) {
    const sumElement = document.querySelector(`td.nurse-${nurseId}.${className}`);
    if (sumElement) {
      sumElement.textContent = value;
    }
  }

  function updateSumElement2(className, value, date) {
    const sumElement2 = document.querySelector(`td.date-${date}.${className}`);
    if (sumElement2) {
      sumElement2.textContent = value;
    }
  }
});
</script>
