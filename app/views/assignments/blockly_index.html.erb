<h1>Blockly</h1>

<div id="blocklyDiv" style="height: 300px; width: 600px;"></div>

<xml id="toolbox" style="display: none">
  <category name="Logic" colour="210">
    <block type="controls_if"></block>
    <block type="logic_compare"></block>
    <block type="logic_operation"></block>
    <block type="logic_negate"></block>
    <block type="logic_boolean"></block>
  </category>
  <category name="Loops" colour="120">
    <block type="controls_repeat_ext"></block>
    <block type="controls_whileUntil"></block>
  </category>
  <category name="Math" colour="230">
    <block type="math_number"></block>
    <block type="math_arithmetic"></block>
    <block type="math_single"></block>
  </category>
  <category name="Text" colour="180">
    <block type="text"></block>
    <block type="text_print"></block>
  </category>
</xml>

<p>
  <button onclick="showCode()">Show JavaScript</button>
  <button onclick="runCode()">Run JavaScript</button>
</p>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    var workspace = Blockly.inject('blocklyDiv', {
      toolbox: document.getElementById('toolbox'), 
      var workspace;
      grid: {
        spacing: 20,
        length: 3,
        colour: '#ccc',
        snap: true
      }
    });
  });

  function showCode() {
    Blockly.JavaScript.INFINITE_LOOP_TRAP = null;
    var code = Blockly.JavaScript.workspaceToCode(workspace);
    alert(code);
  }

  function runCode() {
    window.LoopTrap = 1000;
    Blockly.JavaScript.INFINITE_LOOP_TRAP = 
        'if (--window.LoopTrap === 0) throw "Infinite loop.";\n';
    var code = Blockly.JavaScript.workspaceToCode(workspace);
    try {
      eval(code);
    } catch (e) {
      alert(e);
    }
  }
</script>
